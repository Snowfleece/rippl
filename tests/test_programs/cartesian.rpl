toLine = fun x -> fun ylist -> 
	if len ylist == 0
	then []
	else (x,(head ylist)) cons (toLine~x~(tail ylist))

toCartesian = fun xs -> fun ys ->
	if len xs == 0
	then []
	else (toLine~(head xs)~ys) cons (toCartesian~(tail xs)~ys)

main = let real = [(int_to_float x) /. 100.0 | x over [-200...100]] in
	let complex = [(int_to_float y) /. 100.0 | y over [-100...100]] in
	toCartesian~real~complex
{- toCartesian~[1...3]~[1...3] -}
