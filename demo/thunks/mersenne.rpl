divides = fun x -> fun y -> if (x % y == 0) then true else false

is_prime = fun n -> if n < 2 then false else 
                let lst = [2...n] in
                let d = [ z | z over lst, (divides~n~z) ] in
                if head d == n then true else false

mersenne = fun n -> [2^x-1 | x over [1...n], is_prime~(2^x-1)]

main :: [int]
main = mersenne~10
